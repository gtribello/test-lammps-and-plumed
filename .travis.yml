language: cpp
cache: ccache
matrix: 
  include:
# This is with make, shared linking and a preinstalled version of PLUMED
  - os: linux
    dist: trusty
    sudo: required 
    env: CMAKE_LAMMPS=no DOWNLOAD_PLUMED=no PLUMED_MODE=shared PLUMED_VERSION=master
#Â This is with make, static linking and LAMMPS downloads the master version of PLUMED
  - os: linux
    dist: trusty
    sudo: required
    env: CMAKE_LAMMPS=no DOWNLOAD_PLUMED=yes PLUMED_MODE=static
# This is with cmake, runtime linking and LAMMPS downloads PLUMED
  - os: linux
    dist: trusty
    sudo: required
    env: CMAKE_LAMMPS=yes DOWNLOAD_PLUMED=yes PLUMED_MODE=runtime
# This is with cmake, static linking and LAMMPS uses a preinstalled version of PLUMED
  - os: linux 
    dist: trusty
    sudo: required
    env: CMAKE_LAMMPS=yes DOWNLOAD_PLUMED=no PLUMED_MODE=static

install:
  - export PATH="$HOME/opt/bin:$PATH"
  - export LD_LIBRARY_PATH="$HOME/opt/lib:$LD_LIBRARY_PATH"
  - sudo apt-get update -qq
  - sudo apt install mpi-default-bin mpi-default-dev
  #- sudo apt-get -y install libatlas-base-dev
  - sudo apt-get install gsl-bin libgsl0-dev
  - sudo ln -s ccache /usr/local/bin/mpic++
  - export PATH=/usr/lib/ccache:${PATH}
  - ccache -s
# version=master or version=f123f12f3 to select a specific version
  - if test "$DOWNLOAD_PLUMED" == no ; then CXX="mpic++" .travis/install.plumed version=$PLUMED_VERSION; fi
# patch=lammps-6Apr13 to select a patch
# patch=no to skip patching
# repo=https://github.com/gtribello/lammps.git to clone a given repository (rather than official lammps)
# version=pablo-fix to checkout a specific version
  - .travis/install.lammps version=master downloadplumed=$DOWNLOAD_PLUMED cmake=$CMAKE_LAMMPS
  - ccache -s

script:
  - ./run-tests.sh
# should add something that makes the script fail when there are errors
